#!/bin/bash

export SLURM_PROCID="0"
export SLURM_LOCALID="0"
export SLURM_NTASKS="1"
export SLURM_SUBMIT_HOST="rsclearn1260" # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#export LD_LIBRARY_PATH=/home/jinkyuk/.conda/envs/ua-mvp-cuda-3-glog-0.5-2/lib:/home/jinkyuk/.conda/envs/ua-mvp-cuda-3-glog-0.5-2/lib/python3.8/site-packages:/checkpoint/avatar/ua_setup/vulkan_sdk/1.1.108.0/x86_64/lib

echo " RUN : " $RSC_PROGRAM_NAME
echo " ablationcamerasinglegpu or ablationcamera or debugprefetch :" $1
echo " holdoutpath :" $2
echo " holdoutratio :" $3
echo "LD_LIBRARY_PATH:" $LD_LIBRARY_PATH

echo " $(hostname) rank ${SLURM_PROCID} $(env | grep KRB5)"


echo $PWD

if [ ! -f ${RSC_RUN_SLURM_SNAPSHOT_DIR}/config.py ]
then
    echo ${RSC_RUN_SLURM_SNAPSHOT_DIR}/config.py "not found"
    exit
fi

if [ ! -d ${RSC_EXP_RUN_BASE_DIR} ]
then
    echo ${RSC_EXP_RUN_BASE_DIR} "not found"
    exit
fi

RUN_DIR=${RSC_EXP_RUN_BASE_DIR}/${SLURM_NODEID}/${SLURM_LOCALID}
export RSC_RUN_DIR=$RUN_DIR

hostname

mkdir -p ${RUN_DIR}

# DONT DO THIS -- the slowest one could delete the fast runner's log file and cause IO error
#rm -rf ${RUN_DIR}/log-r*.txt

echo "RUN DIR : " ${RUN_DIR}
ls -althr  ${RUN_DIR}

RUN_CONFIG=${RSC_CONFIG_DIR}/config.py

echo "RUN CONFIG :"
echo ${RUN_CONFIG}

echo "SLURM LOCAL ID " ${SLURM_LOCALID}
echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ SLURM RANK " ${SLURM_PROCID}

# handling program arguments in bash script is not fun. Pass the sbatch arguments to python program directly. Since this argument is generated by sbatch, arugment sanity checking can be done in sbatch.py if necessary
args=""
for a in "$@";do
    echo $a
    args=$args" "$a
done
echo "@@@@@ srun_wrapper : program name: " ${RSC_PROGRAM_NAME} " arguments " $args "SLURM LOCAL ID" ${SLURM_LOCALID} "SLURM PROC ID" $SLURM_PROCID
CUDA_VISIBLE_DEVICES=${SLURM_LOCALID} python ${RSC_RUN_SLURM_SNAPSHOT_DIR}/${RSC_PROGRAM_NAME} ${RUN_CONFIG} $args
